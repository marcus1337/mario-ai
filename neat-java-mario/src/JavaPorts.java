/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class JavaPorts {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected JavaPorts(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(JavaPorts obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        exampleJNI.delete_JavaPorts(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void init(int numInputNodes, int numOutputNode, int numAIs) {
    exampleJNI.JavaPorts_init(swigCPtr, this, numInputNodes, numOutputNode, numAIs);
  }

  public int getGeneration() {
    return exampleJNI.JavaPorts_getGeneration(swigCPtr, this);
  }

  public void saveGeneration(String filename) {
    exampleJNI.JavaPorts_saveGeneration(swigCPtr, this, filename);
  }

  public void loadGeneration(String filename, int generation) {
    exampleJNI.JavaPorts_loadGeneration(swigCPtr, this, filename, generation);
  }

  public void evolve() {
    exampleJNI.JavaPorts_evolve(swigCPtr, this);
  }

  public void setFitness(int index, int fitness) {
    exampleJNI.JavaPorts_setFitness(swigCPtr, this, index, fitness);
  }

  public void setBehavior(int index, IntVec behaviors) {
    exampleJNI.JavaPorts_setBehavior(swigCPtr, this, index, IntVec.getCPtr(behaviors), behaviors);
  }

  public void setTargetSpecies(int numTargetSpecies) {
    exampleJNI.JavaPorts_setTargetSpecies(swigCPtr, this, numTargetSpecies);
  }

  public void setSurpriseEffect(float effect) {
    exampleJNI.JavaPorts_setSurpriseEffect(swigCPtr, this, effect);
  }

  public void mapElites() {
    exampleJNI.JavaPorts_mapElites(swigCPtr, this);
  }

  public void randomizePopulation(int minNodes, int maxNodes) {
    exampleJNI.JavaPorts_randomizePopulation(swigCPtr, this, minNodes, maxNodes);
  }

  public void randomizePopulationViaElites() {
    exampleJNI.JavaPorts_randomizePopulationViaElites(swigCPtr, this);
  }

  public void saveElites(String foldername) {
    exampleJNI.JavaPorts_saveElites__SWIG_0(swigCPtr, this, foldername);
  }

  public void saveElites() {
    exampleJNI.JavaPorts_saveElites__SWIG_1(swigCPtr, this);
  }

  public void loadElites(String foldername) {
    exampleJNI.JavaPorts_loadElites__SWIG_0(swigCPtr, this, foldername);
  }

  public void loadElites() {
    exampleJNI.JavaPorts_loadElites__SWIG_1(swigCPtr, this);
  }

  public void storeElites() {
    exampleJNI.JavaPorts_storeElites(swigCPtr, this);
  }

  public void loadBestElite(String foldername, String filename) {
    exampleJNI.JavaPorts_loadBestElite(swigCPtr, this, foldername, filename);
  }

  public void saveBestElite(String foldername, String filename) {
    exampleJNI.JavaPorts_saveBestElite(swigCPtr, this, foldername, filename);
  }

  public void calcNEATInput(int index, FloatVec inputs) {
    exampleJNI.JavaPorts_calcNEATInput(swigCPtr, this, index, FloatVec.getCPtr(inputs), inputs);
  }

  public FloatVec getNEATOutput(int index) {
    return new FloatVec(exampleJNI.JavaPorts_getNEATOutput(swigCPtr, this, index), true);
  }

  public void calcNEATEliteInput(int index, FloatVec inputs) {
    exampleJNI.JavaPorts_calcNEATEliteInput(swigCPtr, this, index, FloatVec.getCPtr(inputs), inputs);
  }

  public FloatVec getNEATEliteOutput(int index) {
    return new FloatVec(exampleJNI.JavaPorts_getNEATEliteOutput(swigCPtr, this, index), true);
  }

  public void insertEliteIntoGeneration(int eliteIndex, int aiIndex) {
    exampleJNI.JavaPorts_insertEliteIntoGeneration(swigCPtr, this, eliteIndex, aiIndex);
  }

  public void setMaxHiddenNodes(int numNodes) {
    exampleJNI.JavaPorts_setMaxHiddenNodes(swigCPtr, this, numNodes);
  }

  public int getNumElites() {
    return exampleJNI.JavaPorts_getNumElites(swigCPtr, this);
  }

  public int getNumElitesOfUniqueDimensionValue(int dimension) {
    return exampleJNI.JavaPorts_getNumElitesOfUniqueDimensionValue(swigCPtr, this, dimension);
  }

  public int getNumElitesOfDimensionWithValue(int dimension, int value) {
    return exampleJNI.JavaPorts_getNumElitesOfDimensionWithValue(swigCPtr, this, dimension, value);
  }

  public int getNumElitesOfDimensionWithinThreshold(int dimension, int low, int high) {
    return exampleJNI.JavaPorts_getNumElitesOfDimensionWithinThreshold(swigCPtr, this, dimension, low, high);
  }

  public IntVec getBestEliteBehavior() {
    return new IntVec(exampleJNI.JavaPorts_getBestEliteBehavior(swigCPtr, this), true);
  }

  public void setMutationRates(float newNodeRate, float newLinkRate, float randomizeLinkRate, float mutateLinkRate, float enableDisableLinkRate, boolean enableExtraMutationRate) {
    exampleJNI.JavaPorts_setMutationRates__SWIG_0(swigCPtr, this, newNodeRate, newLinkRate, randomizeLinkRate, mutateLinkRate, enableDisableLinkRate, enableExtraMutationRate);
  }

  public void setMutationRates(float newNodeRate, float newLinkRate, float randomizeLinkRate, float mutateLinkRate, float enableDisableLinkRate) {
    exampleJNI.JavaPorts_setMutationRates__SWIG_1(swigCPtr, this, newNodeRate, newLinkRate, randomizeLinkRate, mutateLinkRate, enableDisableLinkRate);
  }

  public void storeElitesInVector() {
    exampleJNI.JavaPorts_storeElitesInVector(swigCPtr, this);
  }

  public void changeEliteFitnessAndBehvaior(int index, int newFitness, IntVec behaviors) {
    exampleJNI.JavaPorts_changeEliteFitnessAndBehvaior(swigCPtr, this, index, newFitness, IntVec.getCPtr(behaviors), behaviors);
  }

  public void refactorEliteMapping() {
    exampleJNI.JavaPorts_refactorEliteMapping(swigCPtr, this);
  }

  public JavaPorts() {
    this(exampleJNI.new_JavaPorts(), true);
  }

}
